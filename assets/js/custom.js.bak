"use strict";
/**
 * Class Event
 *
 */

/**
 * 
 *  utility funciton
 * 
 */


function include(arr,obj) {
    return (arr.indexOf(obj) != -1);
}

function renderCalendar(events){
    const dt_events = events;        
    $("#myCalendar").fullCalendar({
        height: 'auto',
        header: {
          left: 'prev,next today',
          center: 'title',
          right: 'month,agendaWeek,agendaDay'
        },
        defaultDate: '2020-01-01',
        selectable: true,
        editable: false,
        events:events,
        eventLimit:true,
        views:{
            month:{
                eventLimit:3,
            }
        },
        eventLimitText:"more",
        // eventAfterRender: function(event, element) {
        //     $(element).tooltip({
        //         title: event.description,
        //         container: "body"
        //     });
        // }
        eventRenderWait: 300,
        eventClick: function(event){
            console.log(event);
        }
    });  
}

/**
 * 
 * initialize calendar
 * 
 */
function loadCalendar(element){
    $.ajax({
        url: 'Home/calendar',
        type: "GET",
        dataType: "text"
    }).done(function(response){
        element.append(response);
        loadEvents();
    }); 
};

function loadUpcomingSchedule(data){
    let schEl = $('#mySchedule');
    let newEl, dtStr;
    for(let i=0; i<data.length; i++){
        dtStr = (data[i].start === data[i].end ? data[i].start : data[i].start + ' - ' + data[i].end);
        newEl = '<div><h5 class="list-schedule">'+
            dtStr+'</h5><p class="section-lead"><strong>'+
            data[i].title+'</strong><br/>'+data[i].description+'</p></div>';
        schEl.append(newEl);
    }
}

function getDataHRIS(events_params){
    const eventToMerge = events_params;
    // let url_api = 'http://172.73.1.94/rest/rest-izin.php/data?tgl=2020-07-01&tgl_end=2020-08-10';
    let url_api = 'http://assetsmanagement.lan/assets/json/data_izin.json';
    $.ajax({
        url:url_api,
        cache: false,
        type:'GET',
        dataType:'JSON',
        crossDomain:true,
    }).done(function(response_api){             
        const dt_json = response_api.data;
        let events = [];
        
        let backgroundColor= '#fd7e14';
        let borderColor= '#fd7e14';
        let textColor= '#fafafa';

        // predefined events
        for(let i=0; i<5; i++){
            let h_name, h_div, h_dtstart, h_dtend;
            let event, h_extProps; 
            h_extProps = {
                start:dt_json[i].tgl,
                end:dt_json[i].tgl_end,
                description: dt_json[i].nama,
                department: dt_json[i].nama_bag,
            };             
            event = {
                title:1,
                start:dt_json[i].tgl,
                end:dt_json[i].tgl_end,
                description: '',
                extendedProps: h_extProps,
            };

            // jika event lebih dari 1hari
            let eventToSplit = [];
            if(dt_json[i].tgl !== dt_json[i].tgl_end){
                //  buat object baru sebanyak range tgl
                eventToSplit = $(this).buildExtendEventsFullCalendar(event);
                events.push(...eventToSplit);
            }else{
                events.push(event);
            }
        }

        // grouped events
        let eventsIndex = [];
        let groupsEvent = [];
        for(let i=0; i<events.length; i++){
            let group = {};
            if(include(eventsIndex, events[i].start)){
                let inTo = eventsIndex
                    .map(function(e) { 
                        return e; 
                    }).indexOf(events[i].start);

                let count = parseInt(groupsEvent[inTo].title);
                groupsEvent[inTo].title = count + 1;
                let ext = [].concat(groupsEvent[inTo].extendedProps, events[i].extendedProps);
                groupsEvent[inTo].extendedProps = ext;
            }else{
                group.title = 1;
                group.start = events[i].start;
                group.end = events[i].end;
                group.desc = '';
                group.backgroundColor = backgroundColor;
                group.borderColor = borderColor;
                group.textColor = textColor;
                group.extendedProps = events[i].extendedProps;
                groupsEvent.push(group);
                eventsIndex.push(group.start);
            }
        }
        let events_combined = [].concat(eventToMerge, groupsEvent);
        renderCalendar(events_combined);   
    });
}

function dateTimeStrToDateStr(dateTimeStr){
    let dateStr = moment(dateTimeStr).format('YYYY-MM-DD');
    return moment(dateStr).format('YYYY-MM-DD');
}

function loadEvents(){
    let events = [];
    $.ajax({
        url: 'Home/calendar_events',
        type: "GET",
        dataType: "json"
    }).done(function(response){
        const r = response;
        let companyEvents = [];
        for(let i=0; i<r.length; i++){
            let dtStartStr = dateTimeStrToDateStr(r[i].date_start);
            let dtEndStr = dateTimeStrToDateStr(r[i].date_end);
            let event = {
                title:r[i].celebration,
                start: dtStartStr,
                end:dtEndStr,
                description: (r[i].note !== null ? r[i].note : r[i].celebration),
                backgroundColor: (r[i].type === 'nasional' ? '#fc544b' : '#3abaf4'),
                borderColor: (r[i].type === 'nasional' ? '#fc544b' : '#3abaf4'),
                textColor: '#fafafa'
            };
            events.push(event);
            if(r[i].type === 'company'){
                companyEvents.push(event);
            }
        }   
        loadUpcomingSchedule(companyEvents);  
        getDataHRIS(events);
    });
};

async function fetchDataHris(){
    const res = await fetch('http://assetsmanagement.lan/assets/json/data_izin.json');
    const data = await res.json();
    console.log(data);
}

async function fetchAPI(url){
    const res = await fetch(url);
    const data = await res.json();
    return data;
}

$(document).ready(function(){  
    /**
     * 
     * sidebar menu click
     * 
     */
    let sidebar_menu = $("#sidebar_menu a");
    let content_page = $("#main_content");

    sidebar_menu.each(function(){
        $(this).click(function(event){
            event.preventDefault();
            let valid_url = $(this).attr("href");
            if(valid_url !== "#"){
                $(this).custom_callback(valid_url, content_page);
            }
        });
    });    
    
    loadCalendar(content_page); 

});

(function($){

    $.fn.custom_callback = function(url, element){
        $.ajax({
            url: url,
            type: "GET",
            dataType: "text",
            success: function(){
                element.empty();
            }
        }).done(function(response){
            element.append(response);
        });
    };

    $.fn.buildExtendEventsFullCalendar = function(events){
        const event = events;
        let title = event.title;
        let extProps = event.extendedProps;
        let backgroundColor = event.backgroundColor;
        let borderColor = event.borderColor;
        let textColor = event.textColor;
        let dtStart = moment(event.start, 'YYYY-MM-DD');
        let dtEnd = moment(event.end, 'YYYY-MM-DD');
        let differ = dtEnd.diff(dtStart, 'days');

        let extEvent = [];
        for(let i=0; i<=differ; i++){
            let currDate = moment(dtStart, 'YYYY-MM-DD').add(i, 'days');
            let currDateStr = currDate.format('YYYY-MM-DD');
            
            let currEvent = {
                title:title,
                start:currDateStr,
                end:currDateStr,
                extendedProps:extProps,
                backgroundColor:backgroundColor,
                borderColor:borderColor,
                textColor:textColor
            };
            extEvent.push(currEvent);
        }
        return extEvent;
    }

}(jQuery));


